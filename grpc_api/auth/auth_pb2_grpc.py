# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc_api

import grpc_api.auth.auth_pb2 as auth__pb2


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateToken = channel.unary_unary(
            "/auth.AuthService/ValidateToken",
            request_serializer=auth__pb2.TokenRequest.SerializeToString,
            response_deserializer=auth__pb2.TokenResponse.FromString,
        )


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ValidateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc_api.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ValidateToken": grpc_api.unary_unary_rpc_method_handler(
            servicer.ValidateToken,
            request_deserializer=auth__pb2.TokenRequest.FromString,
            response_serializer=auth__pb2.TokenResponse.SerializeToString,
        ),
    }
    generic_handler = grpc_api.method_handlers_generic_handler(
        "auth.AuthService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ValidateToken(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc_api.experimental.unary_unary(
            request,
            target,
            "/auth.AuthService/ValidateToken",
            auth__pb2.TokenRequest.SerializeToString,
            auth__pb2.TokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
